---

#convert to upper case

- name: Make upper.py executable
  shell: chmod u+x upper.py
  delegate_to: localhost
  run_once: true

- name: Remove the header of the windows.csv
  shell: awk 'FNR > 1 { print  $0 }' windows.csv > upper.txt
  delegate_to: localhost
  run_once: true

- name: Convert all hostname to uppercase
  shell: ./upper.py upper.txt
  delegate_to: localhost
  run_once: true
  
- name: Create windows.csv header 
  shell: echo Hostname,Check-Host,Port,IPAddress,CPUCore,RAM,Disk,Check-Host-ip > windows.csv
  delegate_to: localhost
  run_once: true
  
- name: Put back the rest to windows.csv
  shell: cat upper.txt >> windows.csv
  delegate_to: localhost
  run_once: true
  

- name: Create wins3.ini inventory 1
  shell: printf "\tASDF\n" | awk -F',' '$1' windows.csv > temp0  
  delegate_to: localhost
  run_once: true 
  
- name: Create wins3.ini inventory 2
  shell: awk -F',' 'FNR > 1 { print  $1 " ansible_host="$4 }' temp0 > temp
  delegate_to: localhost
  run_once: true

- name: Create wins3.ini inventory 3.1
  shell: echo [windows] > wins3.ini
  delegate_to: localhost
  run_once: true  
  
- name: Create wins3.ini inventory 3.2
  shell: awk NF temp > temp0001
  delegate_to: localhost
  run_once: true  

- name: Create wins3.ini inventory 5
  shell: cat temp0001 | sort >> wins3.ini
  delegate_to: localhost
  run_once: true  

#- meta: end_play

- name: Create wins3.ini inventory 4.1
  shell: echo > tempwins
  delegate_to: localhost
  run_once: true 

- name: Create wins3.ini inventory 4.2
  shell: echo [windows:vars] >> tempwins
  delegate_to: localhost
  run_once: true 
    
- name: Create wins3.ini inventory 5
  #shell: echo ansible_user=test >> tempwins
  shell: echo ansible_user=administrator >> tempwins
  delegate_to: localhost
  run_once: true 

- name: Create wins3.ini inventory 6
  shell: echo ansible_connection=winrm >> tempwins
  delegate_to: localhost
  run_once: true 
  
- name: Create wins3.ini inventory 7
  shell: echo ansible_winrm_transport=basic >> tempwins
  delegate_to: localhost
  run_once: true 

- name: Create wins3.ini inventory 8
  shell: echo ansible_winrm_server_cert_validation=ignore >> tempwins
  delegate_to: localhost
  run_once: true 
  
- name: Create wins3.ini inventory 9
  shell: cat tempwins >> wins3.ini
  delegate_to: localhost
  run_once: true 
  
  
#- name: Create wins inventory 13
#  shell: ansible_winrm_kinit_mode=manual >> wins
#  delegate_to: localhost
#  run_once: true  

- name: Make create-comma.sh executable
  shell: chmod u+x create-comma.sh
  delegate_to: localhost
  run_once: true

- name: Make combine.py executable
  shell: chmod u+x combine.py
  delegate_to: localhost
  run_once: true


- name: Create wins2.ini inventory 1.1
  shell: ./create-comma.sh
  delegate_to: localhost
  run_once: true

- name: Create wins2.ini inventory 1.2
  shell: ./combine.py > temp003
  delegate_to: localhost
  run_once: true

  
- name: Create wins2.ini inventory 1.3
  shell: printf "\tASDF\n" | awk -F',' '$2' temp003 > temp03
  delegate_to: localhost
  run_once: true 

- name: Create wins2.ini inventory 2.1
  shell: awk -F',' 'FNR > 1 { print $2 " ansible_host="$8 }' temp03 > temp3
  delegate_to: localhost
  run_once: true

- name: Create wins2.ini inventory 3
  shell: cat temp3 | uniq | sort > temp4
  delegate_to: localhost
  run_once: true   

- name: Create wins2.ini inventory 4.00
  shell: echo [windows] > wins2.ini
  delegate_to: localhost
  run_once: true    

  
- name: Create wins2.ini inventory 4.01
  shell: awk NF temp4 >> wins2.ini
  delegate_to: localhost
  run_once: true    
  
- name: Create wins2.ini inventory 5
  shell: cat tempwins >> wins2.ini
  delegate_to: localhost
  run_once: true 

 
 
- name: Create loop variables 1
  shell: chmod u+x create-loop.py
  delegate_to: localhost
  run_once: true
  
- name: Create loop variables 2
  shell: ./create-loop.py windows.csv
  delegate_to: localhost
  run_once: true

